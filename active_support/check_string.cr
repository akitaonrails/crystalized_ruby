require "./inflector"

puts 1.ordinalize            # => "1st"
puts 2.ordinalize            # => "2nd"
puts 1002.ordinalize         # => "1002nd"
puts 1003.ordinalize         # => "1003rd"
puts -11.ordinalize          # => "-11th"
puts -1001.ordinalize        # => "-1001st"
puts 1.ordinal               # => "st"
puts 2.ordinal               # => "nd"
puts 1002.ordinal            # => "nd"
puts 1003.ordinal            # => "rd"
puts -11.ordinal             # => "th"
puts -1001.ordinal           # => "st"

puts "post".pluralize             # => "posts"
puts "octopus".pluralize          # => "octopi"
puts "sheep".pluralize            # => "sheep"
puts "words".pluralize            # => "words"
puts "the blue mailman".pluralize # => "the blue mailmen"
puts "CamelOctopus".pluralize     # => "CamelOctopi"
puts "apple".pluralize(1)         # => "apple"
# puts "apple".pluralize(2)         # => "apples"
# puts "ley".pluralize(:es)         # => "leyes"
# puts "ley".pluralize(1, :es)      # => "ley"
puts "posts".singularize            # => "post"
puts "octopi".singularize           # => "octopus"
puts "sheep".singularize            # => "sheep"
puts "word".singularize             # => "word"
puts "the blue mailmen".singularize # => "the blue mailman"
puts "CamelOctopi".singularize      # => "CamelOctopus"
# puts "leyes".singularize(:es)       # => "ley"
puts "active_record".camelize                # => "ActiveRecord"
puts "active_record".camelize(:lower)        # => "activeRecord"
puts "active_record/errors".camelize         # => "ActiveRecord::Errors"
puts "active_record/errors".camelize(:lower) # => "activeRecord::Errors"
puts "man from the boondocks".titleize # => "Man From The Boondocks"
puts "x-men: the last stand".titleize  # => "X Men: The Last Stand"
puts "ActiveModel".as_underscore         # => "active_model"
# puts "ActiveModel".underscore         # => "active_model" # native crystal implementation doesn't handle custom things like ::
puts "ActiveModel::Errors".as_underscore # => "active_model/errors"
# puts "ActiveModel::Errors".underscore # => "active_model/errors" # native crystal implementation doesn't handle custom things like ::
puts "puni_puni".dasherize # => "puni-puni"
puts "ActiveRecord::CoreExtensions::String::Inflections".demodulize # => "Inflections"
puts "Inflections".demodulize                                       # => "Inflections"
puts "::Inflections".demodulize                                     # => "Inflections"
puts "".demodulize                                                  # => ""
puts "Net::HTTP".deconstantize   # => "Net"
puts "::Net::HTTP".deconstantize # => "::Net"
puts "String".deconstantize      # => ""
puts "::String".deconstantize    # => ""
puts "".deconstantize            # => ""
puts "RawScaledScorer".tableize # => "raw_scaled_scorers"
puts "ham_and_egg".tableize     # => "ham_and_eggs"
puts "fancyCategory".tableize   # => "fancy_categories"
puts "ham_and_eggs".classify # => "HamAndEgg"
puts "posts".classify        # => "Post"
puts "employee_salary".humanize              # => "Employee salary"
puts "author_id".humanize                    # => "Author"
puts "author_id".humanize(capitalize: false) # => "author"
puts "_id".humanize                          # => "Id"
puts "what a Lovely Day".upcase_first # => "What a Lovely Day"
puts "w".upcase_first                 # => "W"
puts "".upcase_first                  # => ""
puts "Message".foreign_key        # => "message_id"
puts "Message".foreign_key(false) # => "messageid"
puts "Admin::Post".foreign_key    # => "post_id"